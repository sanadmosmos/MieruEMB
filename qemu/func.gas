	.file	"func.c"
	.text
	.balign 2
.globl _mino_clear
	.def	_mino_clear;	.scl	2;	.type	32;	.endef
_mino_clear:
	pushl	%ebp
	xorl	%ecx, %ecx
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	xorl	%ebx, %ebx
	movl	8(%ebp), %esi
L11:
	xorl	%edx, %edx
	leal	(%esi,%ecx,4), %eax
L10:
	incl	%edx
	movl	$0, (%eax)
	addl	$4, %eax
	cmpl	$11, %edx
	jle	L10
	incl	%ebx
	addl	$10, %ecx
	cmpl	$9, %ebx
	jle	L11
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _map_clear
	.def	_map_clear;	.scl	2;	.type	32;	.endef
_map_clear:
	pushl	%ebp
	xorl	%ecx, %ecx
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	xorl	%ebx, %ebx
	movl	8(%ebp), %esi
L26:
	xorl	%edx, %edx
	leal	(%esi,%ecx,4), %eax
L25:
	incl	%edx
	movl	$0, (%eax)
	addl	$4, %eax
	cmpl	$9, %edx
	jle	L25
	incl	%ebx
	addl	$10, %ecx
	cmpl	$11, %ebx
	jle	L26
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _putblock
	.def	_putblock;	.scl	2;	.type	32;	.endef
_putblock:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%edx
	imull	$10, 8(%ebp), %eax
	imull	$10, 12(%ebp), %esi
	leal	10(%eax), %edx
	leal	11(%eax), %ebx
	addl	$20, %eax
	movl	%edx, -16(%ebp)
	cmpl	%eax, %ebx
	jge	L44
L42:
	leal	1(%esi), %edx
	leal	10(%esi), %eax
	cmpl	%eax, %edx
	jge	L46
	movl	%edx, %eax
	imull	$320, %eax, %eax
	leal	(%ebx,%eax), %ecx
L41:
	cmpl	$199, %ebx
	jg	L38
	movl	_e_vram, %edi
	movb	16(%ebp), %al
	movb	%al, (%ecx,%edi)
L38:
	incl	%edx
	leal	10(%esi), %eax
	addl	$320, %ecx
	cmpl	%eax, %edx
	jl	L41
L46:
	movl	-16(%ebp), %eax
	incl	%ebx
	addl	$10, %eax
	cmpl	%eax, %ebx
	jl	L42
L44:
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putmino
	.def	_putmino;	.scl	2;	.type	32;	.endef
_putmino:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movl	8(%ebp), %edi
	movl	$0, -16(%ebp)
	movl	$0, -20(%ebp)
L57:
	movl	-20(%ebp), %eax
	xorl	%esi, %esi
	leal	(%edi,%eax,4), %ebx
L56:
	movl	(%ebx), %eax
	addl	$4, %ebx
	imull	480(%edi), %eax
	pushl	%eax
	movl	-16(%ebp), %eax
	addl	488(%edi), %eax
	pushl	%eax
	movl	484(%edi), %eax
	addl	%esi, %eax
	incl	%esi
	pushl	%eax
	call	_putblock
	addl	$12, %esp
	cmpl	$2, %esi
	jle	L56
	incl	-16(%ebp)
	addl	$10, -20(%ebp)
	cmpl	$2, -16(%ebp)
	jle	L57
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putgrid
	.def	_putgrid;	.scl	2;	.type	32;	.endef
_putgrid:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	pushl	%esi
	xorl	%esi, %esi
L74:
	xorl	%ebx, %ebx
L73:
	movl	%esi, %eax
	movl	$10, %ecx
	cltd
	idivl	%ecx
	testl	%edx, %edx
	je	L72
	movl	%ebx, %eax
	cltd
	idivl	%ecx
	testl	%edx, %edx
	jne	L69
L72:
	leal	(%ebx,%edi), %eax
	addl	_e_vram, %eax
	movb	$7, 10(%eax)
L69:
	incl	%ebx
	cmpl	$100, %ebx
	jle	L73
	incl	%esi
	addl	$320, %edi
	cmpl	$120, %esi
	jle	L74
	popl	%ebx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putmap
	.def	_putmap;	.scl	2;	.type	32;	.endef
_putmap:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%edi
	xorl	%edi, %edi
	movl	$0, -16(%ebp)
L89:
	movl	-16(%ebp), %eax
	movl	8(%ebp), %edx
	xorl	%esi, %esi
	leal	(%edx,%eax,4), %ebx
L88:
	pushl	(%ebx)
	pushl	%edi
	addl	$4, %ebx
	pushl	%esi
	incl	%esi
	call	_putblock
	addl	$12, %esp
	cmpl	$9, %esi
	jle	L88
	incl	%edi
	addl	$10, -16(%ebp)
	cmpl	$11, %edi
	jle	L89
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _judge_set
	.def	_judge_set;	.scl	2;	.type	32;	.endef
_judge_set:
	pushl	%ebp
	movl	$1, %edx
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ebx
	pushl	%ebx
	movl	12(%ebp), %edi
	movl	488(%edi), %ecx
	movl	504(%edi), %eax
	addl	%ecx, %eax
	cmpl	$11, %eax
	jg	L94
	movl	$3, %edx
L105:
	decl	%edx
	jns	L105
	sall	$2, %ecx
	xorl	%edx, %edx
	movl	%ecx, -20(%ebp)
	xorl	%esi, %esi
L116:
	xorl	%ecx, %ecx
L115:
	leal	(%ecx,%esi), %eax
	cmpl	$1, (%edi,%eax,4)
	je	L134
L112:
	incl	%ecx
	cmpl	$3, %ecx
	jle	L115
	incl	%edx
	addl	$10, %esi
	addl	$4, -20(%ebp)
	cmpl	$3, %edx
	jle	L116
	xorl	%edx, %edx
L94:
	movl	%edx, %eax
	popl	%edx
	popl	%ecx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L134:
	cmpl	$0, 40(%edi,%eax,4)
	jne	L112
	movl	484(%edi), %eax
	movl	8(%ebp), %ebx
	addl	%ecx, %eax
	imull	$40, %eax, %eax
	addl	-20(%ebp), %eax
	cmpl	$1, 40(%eax,%ebx)
	jne	L112
	movl	$1, %edx
	jmp	L94
	.balign 2
.globl _rotate_mino
	.def	_rotate_mino;	.scl	2;	.type	32;	.endef
_rotate_mino:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %ecx
	movl	480(%ecx), %eax
	decl	%eax
	cmpl	$6, %eax
	ja	L135
	jmp	*L145(,%eax,4)
	.data
	.balign 4
L145:
	.long	L142
	.long	L142
	.long	L135
	.long	L142
	.long	L142
	.long	L143
	.long	L142
	.text
L142:
	movl	48(%ecx), %eax
	movl	40(%ecx), %edx
	movl	%eax, 40(%ecx)
	movl	128(%ecx), %eax
	movl	%eax, 48(%ecx)
	movl	120(%ecx), %eax
	movl	%eax, 128(%ecx)
	movl	%edx, 120(%ecx)
	movl	88(%ecx), %eax
	movl	44(%ecx), %edx
	movl	%eax, 44(%ecx)
	movl	124(%ecx), %eax
	movl	%eax, 88(%ecx)
	movl	80(%ecx), %eax
	movl	%eax, 124(%ecx)
	movl	%edx, 80(%ecx)
L135:
	popl	%ebp
	ret
L143:
	movl	132(%ecx), %eax
	movl	12(%ecx), %edx
	movl	%eax, 12(%ecx)
	movl	%edx, (%ecx)
	movl	120(%ecx), %eax
	movl	%edx, 120(%ecx)
	movl	%eax, 132(%ecx)
	movl	52(%ecx), %edx
	movl	128(%ecx), %eax
	movl	%edx, 4(%ecx)
	movl	%eax, 52(%ecx)
	movl	80(%ecx), %eax
	movl	%eax, 128(%ecx)
	movl	%edx, 80(%ecx)
	movl	124(%ecx), %eax
	movl	92(%ecx), %edx
	movl	%eax, 92(%ecx)
	movl	%edx, 8(%ecx)
	movl	40(%ecx), %eax
	movl	%edx, 40(%ecx)
	movl	%eax, 124(%ecx)
	movl	48(%ecx), %edx
	movl	88(%ecx), %eax
	movl	%edx, 44(%ecx)
	movl	%eax, 48(%ecx)
	movl	84(%ecx), %eax
	movl	%eax, 88(%ecx)
	movl	%edx, 84(%ecx)
	jmp	L135
	.balign 2
.globl _mino_o
	.def	_mino_o;	.scl	2;	.type	32;	.endef
_mino_o:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %eax
	movl	$3, 480(%eax)
	movl	$1, 44(%eax)
	movl	$1, 48(%eax)
	movl	$1, 84(%eax)
	movl	$1, 88(%eax)
	movl	$1, 492(%eax)
	movl	$1, 496(%eax)
	movl	$2, 500(%eax)
	movl	$2, 504(%eax)
	popl	%ebp
	ret
	.balign 2
.globl _mino_t
	.def	_mino_t;	.scl	2;	.type	32;	.endef
_mino_t:
	pushl	%ebp
	movl	%esp, %ebp
	movl	8(%ebp), %eax
	movl	$5, 480(%eax)
	movl	$1, 4(%eax)
	movl	$1, 40(%eax)
	movl	$1, 44(%eax)
	movl	$1, 48(%eax)
	movl	$0, 492(%eax)
	movl	$1, 496(%eax)
	movl	$2, 500(%eax)
	movl	$2, 504(%eax)
	popl	%ebp
	ret
